{"version":3,"sources":["components/forms/PostData.js","components/forms/UpdateForm.js","components/MaterialTable.js","components/MaterialTabs.js","components/forms/UserV2.js","components/forms/Tracking.js","components/MaterialTabsUser.js","App.js","reportWebVitals.js","index.js"],"names":["tableType","data","a","url_base","SERVER_URL","url","concat","ROUTES","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","id","postData","UpdateForm","props","Obj","object","useState","username","password","firstname","lastname","phonenumber","email","userid","userID","fields","setFields","useEffect","console","log","handleInput","evt","name","target","newValue","value","prevState","DeleteUser","deleteData","then","onChange","onSubmit","preventDefault","updateData","Object","keys","map","input","TextField","label","capitalize","defaultValue","variant","Button","type","onClick","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","MaterialTable","UTILS","fetchItems","table","res","result","setState","items","catch","error","errmsg","fetchFieldnames","table_name","fieldnames","itemChecked","item","checked","selected","state","update_form","this","err","checkedItem","userName","firstName","lastName","phoneNumber","TableContainer","Table","TableHead","Checkbox","field","COLUMN_NAME","TableBody","i","sorter","IconButton","updateFields","React","Component","MaterialTabs","setValue","tables","AppBar","position","Tabs","e","val","Tab","TABLE_NAME","TabPanel","index","children","UserForm","useStyles","makeStyles","container","display","flexDirection","alignItems","margin","textField","spacing","width","button","paper","padding","alignContent","select","address","formInput","setFormInput","classes","Paper","className","alert","TrackingTab","fetchUsers","users","fetchProjects","projects","handleChange","handleSubmit","userCurrent","projectID","projectCurrent","startTime","endTime","team","task","FormControl","style","minWidth","InputLabel","Select","displayEmpty","user","MenuItem","fullName","project","projectName","MaterialTabsUser","App","selectAllTables","isLoaded","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f516991.chunk.js","sourcesContent":["import { SERVER_URL, ROUTES } from '../../config.json';\r\n\r\nasync function postData(tableType, data) {\r\n\r\n    const url_base = SERVER_URL;\r\n\r\n    const url = url_base.concat(ROUTES[tableType]);\r\n\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin', // include, *same-origin, omit\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n          // 'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        redirect: 'follow', // manual, *follow, error\r\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n    });\r\n    return response.json();\r\n}\r\n\r\nexport async function updateData(tableType, data, id) {\r\n\r\n  const url = SERVER_URL.concat(ROUTES[tableType]);\r\n\r\n  const response = await fetch(url + id, {\r\n    method: 'PATCH',\r\n    mode: 'cors',\r\n    cache: 'no-cache',\r\n    credentials: 'same-origin', // include, *same-origin, omit\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n      // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow', // manual, *follow, error\r\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n  });\r\n  return response.json();\r\n\r\n}\r\n\r\nexport async function deleteData(tableType, id) {\r\n\r\n  const url = SERVER_URL.concat(ROUTES[tableType]);\r\n\r\n  const response = await fetch(url + id, {\r\n    method: 'DELETE',\r\n  });\r\n  return response.json();\r\n\r\n}\r\n\r\nexport default postData;","import { Button, TextField, capitalize } from '@material-ui/core';\r\nimport { React, useState, useEffect } from 'react';\r\n\r\nimport { updateData, deleteData } from './PostData';\r\n\r\nexport default function UpdateForm(props) {\r\n\r\n    var Obj = props.object;\r\n    //console.log(Obj);\r\n\r\n    const [fields, setFields] = useState({\r\n\r\n        username: Obj.username,\r\n        password: Obj.password,\r\n        firstname: Obj.firstname,\r\n        lastname: Obj.lastname,\r\n        phonenumber: Obj.phonenumber,\r\n        email: Obj.email,\r\n        userid: Obj.userID\r\n\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(props.object)\r\n    }, [props.object]);\r\n\r\n    const handleInput = evt => {\r\n        const name = evt.target.name;\r\n        const newValue = evt.target.value;\r\n        setFields((prevState) => ({\r\n            ...prevState,\r\n            [name]: newValue\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        var data = fields;\r\n\r\n        //console.log(data, fields.userid)\r\n        updateData(\"USER\", data, fields.userid).then(props.onChange());\r\n\r\n    };\r\n\r\n    const DeleteUser = id => {\r\n        \r\n        deleteData(\"USER\", id).then(props.onChange);\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {Object.keys(fields).map(input => (\r\n                <TextField \r\n                    label={capitalize(input)}\r\n                    name={input}\r\n                    defaultValue={fields[input]}\r\n                    //className={classes.textField}\r\n                    onChange={handleInput}\r\n                    variant=\"outlined\"\r\n                />\r\n            ))}\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                //className={classes.button}\r\n            >\r\n                Update\r\n            </Button>\r\n            <Button\r\n                onClick={() => DeleteUser(fields.userid)}\r\n                variant=\"contained\"\r\n            >\r\n                Delete\r\n            </Button>\r\n        </form>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { Table, TableRow, TableCell, TableContainer, TableHead, TableBody, Button, Checkbox, IconButton } from '@material-ui/core';\r\nimport UpdateForm from './forms/UpdateForm';\r\n\r\nimport { SERVER_URL, ROUTES } from '../config.json';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n        '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n        },\r\n    },\r\n}))(TableRow);\r\n\r\n// const useStyles = makeStyles({\r\n//     table: {\r\n//         minWidth: 700,\r\n//     },\r\n// });\r\n\r\nconst url = SERVER_URL.concat(ROUTES.UTILS);\r\n\r\nexport default class MaterialTable extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            table_name: this.props.table,\r\n            items: [],\r\n            fieldnames: [],\r\n            errmsg: '',\r\n            checked: null,\r\n            selected: null,\r\n            update_form: props.update_form,\r\n        }\r\n    }\r\n    \r\n    fetchItems = async (table) => {\r\n        await fetch(`http://localhost:9000/utils/selectall/${table}/`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            this.setState( prevState =>({\r\n                items: result,\r\n            }))\r\n        }).catch(error => {\r\n            this.setState({\r\n                errmsg: error,\r\n            })\r\n        })\r\n    }\r\n\r\n    fetchFieldnames = async (table_name) => {\r\n        await fetch(`http://localhost:9000/utils/${table_name}/`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            this.setState( prevState =>({\r\n                fieldnames: result,\r\n              }))\r\n        }).catch(error => {\r\n            this.setState({\r\n                errmsg: error,\r\n            })\r\n        })\r\n    }\r\n\r\n    updateFields(){\r\n        this.fetchItems(this.state.table_name);\r\n    }\r\n\r\n    componentDidMount(){\r\n        try{\r\n            this.fetchItems(this.state.table_name);\r\n            this.fetchFieldnames(this.state.table_name);\r\n        }catch(err){\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    itemChecked = (evt,item) => {\r\n\r\n        const checked = evt.target.checked;\r\n        console.log(checked);\r\n\r\n        if (!checked) {\r\n            this.setState({\r\n                selected: item,\r\n            });\r\n    \r\n            console.log(this.state.selected);\r\n        }\r\n\r\n    }\r\n\r\n    sorter(checkedItem, item){\r\n        \r\n        this.setState({\r\n            checked: checkedItem,\r\n            selected: {\r\n                username: item.userName,\r\n                password: item.password,\r\n                firstname: item.firstName,\r\n                lastname: item.lastName,\r\n                phonenumber: item.phoneNumber,\r\n                email: item.email,\r\n                userID: item.userID\r\n            },\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const {fieldnames} = this.state;\r\n        const {items} = this.state;\r\n\r\n        if (true) {\r\n            return (\r\n                <div>\r\n                    <TableContainer>\r\n                        <Table>\r\n                        <TableHead>\r\n                            <StyledTableRow>\r\n                                <StyledTableCell>\r\n                                        <Checkbox></Checkbox>\r\n                                    </StyledTableCell>\r\n                                {fieldnames.map(field => (\r\n                                    <StyledTableCell>\r\n                                        {field.COLUMN_NAME}\r\n                                    </StyledTableCell>\r\n                                ))}\r\n                            </StyledTableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {items.map((item, i) => (\r\n                                <StyledTableRow key={i}>\r\n                                    <StyledTableCell>\r\n                                        <Checkbox \r\n                                            checked={this.state.checked === i}\r\n                                            onClick={() => this.sorter(i, item)}\r\n                                            // onChange={(event) => this.itemChecked(event, item)}\r\n                                        >\r\n                                        </Checkbox>\r\n                                    </StyledTableCell>\r\n                                    {fieldnames.map(field => (\r\n                                        <StyledTableCell>\r\n                                            {item[field.COLUMN_NAME]}\r\n                                        </StyledTableCell>\r\n                                    ))}\r\n                                </StyledTableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    </TableContainer>\r\n                    {this.state.update_form === true &&\r\n                        <div>\r\n                        {this.state.selected != null &&\r\n                            <div>\r\n                                <IconButton onClick={() => this.setState({selected: null})}>Close</IconButton>\r\n                                <UpdateForm object={this.state.selected} onChange={() => this.updateFields()}></UpdateForm>\r\n                            </div>\r\n                        }\r\n                        </div>\r\n                    }\r\n                        \r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n      \r\n}","import React from 'react';\r\nimport {Tabs,Tab,AppBar} from '@material-ui/core';\r\nimport MaterialTable from './MaterialTable';\r\n\r\nexport default function MaterialTabs(props) {\r\n    const [value, setValue] = React.useState(0);\r\n    const handleTabs=(e, val) => {\r\n      setValue(val);\r\n    }\r\n\r\n    const {tables} = props;\r\n\r\n    return (\r\n        <div>\r\n            <h1>AMDIN VIEW</h1>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={value} onChange={handleTabs} variant=\"scrollable\">\r\n                    {tables.map((table, i) => (\r\n                        <Tab key={i} label={table.TABLE_NAME}/>\r\n                    ))}\r\n                </Tabs>\r\n            </AppBar>\r\n            {tables.map((table, i) => (\r\n                <TabPanel key={i} value={value} index={i}>\r\n                    <MaterialTable table={table.TABLE_NAME} update_form={false}/>\r\n                </TabPanel>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index}=props;\r\n    return (\r\n        <div>\r\n            {value===index && (\r\n                <div>{children}</div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import { React, useState } from 'react';\r\nimport { TextField, Button, Paper, makeStyles, capitalize,} from '@material-ui/core';\r\nimport postData from './PostData';\r\nimport MaterialTable from '../MaterialTable';\r\n\r\nexport default function UserForm(props) {\r\n\r\n    const useStyles = makeStyles(theme => ({\r\n        container: {\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            margin: 50,\r\n        },\r\n        textField: {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n        button: {\r\n            margin: theme.spacing(1),\r\n            width: 100,\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(2),\r\n            margin: theme.spacing(2),\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignContent: \"center\",\r\n            alignItems: \"center\"\r\n        },\r\n        select: {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        }\r\n    }))\r\n\r\n    const [formInput, setFormInput] = useState(\r\n        {\r\n            username: \"\",\r\n            password: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            phonenumber: \"\",\r\n            email: \"\",\r\n            address: \"\",\r\n        }\r\n    );\r\n\r\n    const handleInput = evt => {\r\n        const name = evt.target.name;\r\n        const newValue = evt.target.value;\r\n        setFormInput((prevState) => ({\r\n            ...prevState,\r\n            [name]: newValue\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        var data = formInput;\r\n\r\n        postData(\"USER\", data).then(data => alert(data));\r\n\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.paper}>\r\n                <form className={classes.container} onSubmit={handleSubmit}>\r\n                <h3>ADD NEW USER</h3>\r\n                    {Object.keys(formInput).map(input => (\r\n                        <TextField \r\n                            label={capitalize(input)}\r\n                            name={input}\r\n                            defaultValue={formInput[input]}\r\n                            className={classes.textField}\r\n                            onChange={handleInput}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    ))}\r\n                    {/*\r\n                    <Select\r\n                        name=\"city\"\r\n                        label=\"City\"\r\n                        onChange={handleInput}\r\n                        value={formInput.city}\r\n                        className={classes.select}\r\n                    >\r\n                        {cities.map(city => (\r\n                            <MenuItem value={city}>\r\n                                {city}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select> */}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        className={classes.button}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n                <MaterialTable table=\"User\" update_form={true}/>\r\n            </Paper>\r\n        </div>\r\n    )\r\n\r\n}","import { TextField, Button, Select, MenuItem, FormControl, InputLabel } from '@material-ui/core';\r\nimport React from 'react';\r\nimport postData from './PostData';\r\n\r\nexport default class TrackingTab extends React.Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            projects: null,\r\n            users: null,\r\n\r\n            \r\n            startTime: \"00:00:00\",\r\n            endTime: \"00:00:00\",\r\n            userCurrent: '',\r\n            projectCurrent: '',\r\n            \r\n            \r\n            team: null,\r\n            task: null,\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        try{\r\n            this.fetchUsers();\r\n            this.fetchProjects()\r\n        }catch(err){\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    fetchUsers = async () => {\r\n        await fetch(`http://localhost:9000/users/`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            this.setState( prevState =>({\r\n                users: result,\r\n            }))\r\n        }).catch(error => {\r\n            this.setState({\r\n                errmsg: error,\r\n            })\r\n        })\r\n        //console.log(this.state.users);\r\n    }\r\n\r\n    fetchProjects = async () => {\r\n        await fetch(`http://localhost:9000/projects/`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            this.setState( prevState =>({\r\n                projects: result,\r\n            }))\r\n        }).catch(error => {\r\n            this.setState({\r\n                errmsg: error,\r\n            })\r\n        })\r\n        //console.log(this.state.users);\r\n    } \r\n\r\n    handleInput = evt => {\r\n        const name = evt.target.name;\r\n        const newValue = evt.target.value;\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            [name]: newValue\r\n        }));\r\n    };\r\n\r\n    handleChange = evt => {\r\n\r\n        //console.log(this.state.payload[userCurrent]);\r\n\r\n        const newValue = evt.target.value;\r\n        const name = evt.target.name;\r\n\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            [name]: newValue,\r\n        }));\r\n        \r\n    }\r\n\r\n    handleSubmit = evt => {\r\n        evt.preventDefault();\r\n\r\n        var data = {\r\n            userID: this.state.userCurrent,\r\n            projectID: this.state.projectCurrent,\r\n            startTime: this.state.startTime,\r\n            endTime: this.state.endTime,\r\n        };\r\n\r\n        console.log(data);\r\n\r\n        postData(\"TRACKING\", data).then(data => alert(data));\r\n\r\n        //console.log(data, fields.userid)\r\n        //updateData(\"USER\", data, fields.userid).then(props.onChange());\r\n\r\n    };\r\n\r\n    render() {\r\n\r\n        const {users, projects, userCurrent, projectCurrent} = this.state;\r\n        const handleInput = this.handleInput;\r\n\r\n        return (\r\n            <div className=\"horizontalContainer\">\r\n            <h3>Add a new tracking entry, team is set to 1 by default, tasks not yet implmented</h3>\r\n                <form onSubmit={this.handleSubmit}>\r\n    \r\n                    {\r\n                        users != null &&\r\n                        <FormControl className=\"horizontalContainer\" style={\r\n                            {\r\n                                minWidth: 350\r\n                            }\r\n                        }>\r\n                            <InputLabel>Users</InputLabel>\r\n                            <Select\r\n                                name=\"userCurrent\"\r\n                                displayEmpty={true}\r\n                                value={userCurrent}\r\n                                onChange={this.handleChange}\r\n                                variant=\"outlined\"\r\n                            >\r\n                                {users.map(user => (\r\n                                    <MenuItem value={user.userID}>\r\n                                        {user.fullName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        \r\n\r\n                    }\r\n                    \r\n                    {\r\n                        projects != null &&\r\n                        <FormControl className=\"horizontalContainer\" style={\r\n                            {\r\n                                minWidth: 350\r\n                            }\r\n                        }>\r\n                            <InputLabel>Projects</InputLabel>\r\n                            <Select\r\n                                name=\"projectCurrent\"\r\n                                displayEmpty={true}\r\n                                value={projectCurrent}\r\n                                onChange={this.handleChange}\r\n                                variant=\"outlined\"\r\n                            >\r\n                            {projects.map(project => (\r\n                                <MenuItem value={project.projectID}>\r\n                                    {project.projectName}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        </FormControl>\r\n\r\n                    }\r\n                    \r\n                    <FormControl className=\"horizontalContainer\" style={\r\n                            {\r\n                                display: \"flex\",\r\n                                flexDirection: \"row\",\r\n                                minWidth: 350,\r\n                                margin: 20,\r\n                            }\r\n                        }>\r\n                    <TextField\r\n                        label={\"startTime\"}\r\n                        name={\"startTime\"}\r\n                        defaultValue={\"YYYY-MM-DD hh:mm:ss\"}\r\n                        //className={classes.textField}\r\n                        onChange={handleInput}\r\n                        variant=\"outlined\"\r\n                    >\r\n                    </TextField>\r\n                    <TextField\r\n                        label={\"endTime\"}\r\n                        name={\"endTime\"}\r\n                        defaultValue={\"YYYY-MM-DD hh:mm:ss\"}\r\n                        //className={classes.textField}\r\n                        onChange={handleInput}\r\n                        variant=\"outlined\"\r\n                    ></TextField>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        //className={classes.button}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                    </FormControl>\r\n                </form>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {Tabs,Tab,AppBar} from '@material-ui/core';\r\nimport UserForm from './forms/UserV2';\r\nimport Tracking from './forms/Tracking';\r\nimport MaterialTable from './MaterialTable';\r\n\r\nexport default function MaterialTabsUser(props) {\r\n    const [value, setValue] = React.useState(0);\r\n    const handleTabs=(e, val) => {\r\n      setValue(val);\r\n    }\r\n\r\n    const {tables} = props;\r\n\r\n    return (\r\n        <div>\r\n            <h1>USER VIEW</h1>\r\n            <AppBar position=\"static\">\r\n                <Tabs value={value} onChange={handleTabs} variant=\"scrollable\">\r\n                    {/* {tables.map((table, i) => (\r\n                        <Tab key={i} label={table.TABLE_NAME}/>\r\n                    ))} */}\r\n                    <Tab key={1} label=\"User\"></Tab>\r\n                    <Tab key={2} label=\"Tracking\"></Tab>\r\n                    <Tab key={3} label=\"ProjectOverview\"></Tab>\r\n                </Tabs>\r\n            </AppBar>\r\n            {/* {tables.map((table, i) => (\r\n                <TabPanel key={i} value={value} index={i}>\r\n                    <TableView table={table.TABLE_NAME}/>\r\n                    <MaterialTable table={table.TABLE_NAME}/>\r\n                </TabPanel>\r\n            ))} */}\r\n            <TabPanel key={1} value={value} index={0}>\r\n                <UserForm></UserForm>\r\n            </TabPanel>\r\n            <TabPanel key={2} value={value} index={1}>\r\n                <Tracking></Tracking>\r\n            </TabPanel>\r\n            <TabPanel key={3} value={value} index={2}>\r\n            <h3>Project Overview</h3>\r\n                <MaterialTable table=\"projectReview\" update_form={false}/>\r\n            </TabPanel>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index}=props;\r\n    return (\r\n        <div>\r\n            {value===index && (\r\n                <div>{children}</div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport MaterialTabs from './components/MaterialTabs';\r\nimport MaterialTabsUser from './components/MaterialTabsUser';\r\n\r\nimport { SERVER_URL, ROUTES } from './config.json';\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      isLoaded: false,\r\n      items: [],\r\n      tables: []\r\n    };\r\n  }\r\n\r\n  selectAllTables = async () => {\r\n\r\n    const url = SERVER_URL.concat(ROUTES.UTILS);\r\n\r\n    await fetch(url, {method: 'GET', cache: 'no-cache'})\r\n    .then(res => res.json())\r\n    .then(result => {\r\n      this.setState({\r\n        isLoaded: true,\r\n        tables: result\r\n      })\r\n    })\r\n  }\r\n\r\n  handleClick(id) {\r\n    this.deleteData('http://localhost:9000/Person/', id);\r\n  }\r\n\r\n  deleteData = async (url='', id) => {\r\n    const response = await fetch(url + id, {\r\n      method: 'DELETE',\r\n    });\r\n    return response.json();\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.selectAllTables();\r\n  }\r\n\r\n  render(){\r\n\r\n    const {tables} = this.state;\r\n    const {isLoaded} = this.state;\r\n    \r\n\r\n    if (!isLoaded) {\r\n      return <div>Loading...<MaterialTabsUser></MaterialTabsUser></div>;\r\n    } else {\r\n      return (\r\n        <div className=\"MainView\">\r\n          {/* <h2>LIST OF CURRENT ENTITYS (limited to 5)</h2> */}\r\n            {/* <ul className=\"horizontalContainer\">\r\n              {tables.map(table => (\r\n                //<ClickableList table={table.TABLE_NAME} handler={this.handleClick.bind(this)}/>\r\n                <li key={table.TABLE_NAME}>\r\n                  <TableView table={table.TABLE_NAME}/>\r\n                </li>\r\n              ))}\r\n            </ul> */}\r\n            <MaterialTabsUser></MaterialTabsUser>\r\n            <MaterialTabs tables={tables}></MaterialTabs>\r\n          {/* <div className=\"Forms\">\r\n            <h2>ADD NEW ENTRY TO DATABASE</h2>\r\n            <InsertForm />\r\n          </div> */}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}